{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "id": "-0ulvcvDSrMa"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import statistics\n",
        "import seaborn as sb\n",
        "\n",
        "broomnum = pd.read_csv('bedroom_number.csv')\n",
        "broomrat=pd.read_csv('bedroom_rate.csv')\n",
        "car=pd.read_csv('car.csv')\n",
        "disable=pd.read_csv('disable.csv')\n",
        "heating=pd.read_csv('heating.csv')\n",
        "housenum=pd.read_csv('households_number.csv')\n",
        "tenure=pd.read_csv('tenure.csv')\n",
        "wdis=pd.read_csv('workdistance.csv')\n",
        "whours=pd.read_csv('workhours.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "broomnum.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "w7T81TnrUziH",
        "outputId": "e25961f4-b494-4882-c60c-e3058a125177"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode broom1  broom1p broom2  broom2p broom3  \\\n",
              "0      Astley Bridge  E05000650    529      8.9  1,863     31.2  2,438   \n",
              "1           Bradshaw  E05000651    199      4.0  1,280     25.9  2,479   \n",
              "2         Breightmet  E05000652    651     10.8  1,877     31.2  3,003   \n",
              "3      Bromley Cross  E05000653    276      4.6  1,641     27.5  2,423   \n",
              "4  Crompton (Bolton)  E05000654    838     12.4  2,933     43.5  2,156   \n",
              "\n",
              "   broom3p broom4  broom4p  \n",
              "0     40.9  1,132     19.0  \n",
              "1     50.1    993     20.1  \n",
              "2     49.9    484      8.0  \n",
              "3     40.6  1,622     27.2  \n",
              "4     31.9    822     12.2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef07700c-cce6-4246-8577-bff60c7a8153\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>broom1</th>\n",
              "      <th>broom1p</th>\n",
              "      <th>broom2</th>\n",
              "      <th>broom2p</th>\n",
              "      <th>broom3</th>\n",
              "      <th>broom3p</th>\n",
              "      <th>broom4</th>\n",
              "      <th>broom4p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>529</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1,863</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2,438</td>\n",
              "      <td>40.9</td>\n",
              "      <td>1,132</td>\n",
              "      <td>19.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>199</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1,280</td>\n",
              "      <td>25.9</td>\n",
              "      <td>2,479</td>\n",
              "      <td>50.1</td>\n",
              "      <td>993</td>\n",
              "      <td>20.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>651</td>\n",
              "      <td>10.8</td>\n",
              "      <td>1,877</td>\n",
              "      <td>31.2</td>\n",
              "      <td>3,003</td>\n",
              "      <td>49.9</td>\n",
              "      <td>484</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>276</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1,641</td>\n",
              "      <td>27.5</td>\n",
              "      <td>2,423</td>\n",
              "      <td>40.6</td>\n",
              "      <td>1,622</td>\n",
              "      <td>27.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>838</td>\n",
              "      <td>12.4</td>\n",
              "      <td>2,933</td>\n",
              "      <td>43.5</td>\n",
              "      <td>2,156</td>\n",
              "      <td>31.9</td>\n",
              "      <td>822</td>\n",
              "      <td>12.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef07700c-cce6-4246-8577-bff60c7a8153')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ef07700c-cce6-4246-8577-bff60c7a8153 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ef07700c-cce6-4246-8577-bff60c7a8153');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-206fe666-4691-48c0-a93e-023620a01fa2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-206fe666-4691-48c0-a93e-023620a01fa2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-206fe666-4691-48c0-a93e-023620a01fa2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "broomnum",
              "summary": "{\n  \"name\": \"broomnum\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 257,\n        \"samples\": [\n          \"2,046\",\n          \"528\",\n          \"619\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.280812408725843,\n        \"min\": 1.7,\n        \"max\": 41.7,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          3.0,\n          8.1,\n          14.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 280,\n        \"samples\": [\n          \"1,292\",\n          \"2,149\",\n          \"1,669\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.475417327671302,\n        \"min\": 5.8,\n        \"max\": 61.9,\n        \"num_unique_values\": 203,\n        \"samples\": [\n          33.2,\n          27.6,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          \"1,813\",\n          \"1,192\",\n          \"1,503\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom3p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.866058707858699,\n        \"min\": 4.6,\n        \"max\": 81.8,\n        \"num_unique_values\": 219,\n        \"samples\": [\n          37.9,\n          38.4,\n          54.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 274,\n        \"samples\": [\n          \"604\",\n          \"952\",\n          \"650\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom4p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.005131624656887,\n        \"min\": 0.5,\n        \"max\": 51.3,\n        \"num_unique_values\": 187,\n        \"samples\": [\n          36.5,\n          0.5,\n          14.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "broomrat.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "CbFTLxJXU2ne",
        "outputId": "6808fa72-fa01-42fb-8d8b-44a5342df5a1"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode   rat2  rat2p   rat1  rat1p   rat0  rat0p  \\\n",
              "0      Astley Bridge  E05000650  1,935   32.5  2,410   40.4  1,460   24.5   \n",
              "1           Bradshaw  E05000651  2,151   43.4  1,848   37.3    841   17.0   \n",
              "2         Breightmet  E05000652  1,574   26.2  2,186   36.4  1,969   32.8   \n",
              "3      Bromley Cross  E05000653  2,657   44.6  2,303   38.6    939   15.7   \n",
              "4  Crompton (Bolton)  E05000654  1,102   16.3  2,615   38.7  2,388   35.4   \n",
              "\n",
              "   rat-1  rat-1p  rat-2  rat-2p  \n",
              "0    137     2.3     21     0.4  \n",
              "1    105     2.1      6     0.1  \n",
              "2    249     4.1     34     0.6  \n",
              "3     58     1.0      7     0.1  \n",
              "4    492     7.3    152     2.3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-023a5f40-8632-4e82-abd3-9b607856673c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>rat2</th>\n",
              "      <th>rat2p</th>\n",
              "      <th>rat1</th>\n",
              "      <th>rat1p</th>\n",
              "      <th>rat0</th>\n",
              "      <th>rat0p</th>\n",
              "      <th>rat-1</th>\n",
              "      <th>rat-1p</th>\n",
              "      <th>rat-2</th>\n",
              "      <th>rat-2p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>1,935</td>\n",
              "      <td>32.5</td>\n",
              "      <td>2,410</td>\n",
              "      <td>40.4</td>\n",
              "      <td>1,460</td>\n",
              "      <td>24.5</td>\n",
              "      <td>137</td>\n",
              "      <td>2.3</td>\n",
              "      <td>21</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>2,151</td>\n",
              "      <td>43.4</td>\n",
              "      <td>1,848</td>\n",
              "      <td>37.3</td>\n",
              "      <td>841</td>\n",
              "      <td>17.0</td>\n",
              "      <td>105</td>\n",
              "      <td>2.1</td>\n",
              "      <td>6</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>1,574</td>\n",
              "      <td>26.2</td>\n",
              "      <td>2,186</td>\n",
              "      <td>36.4</td>\n",
              "      <td>1,969</td>\n",
              "      <td>32.8</td>\n",
              "      <td>249</td>\n",
              "      <td>4.1</td>\n",
              "      <td>34</td>\n",
              "      <td>0.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>2,657</td>\n",
              "      <td>44.6</td>\n",
              "      <td>2,303</td>\n",
              "      <td>38.6</td>\n",
              "      <td>939</td>\n",
              "      <td>15.7</td>\n",
              "      <td>58</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>1,102</td>\n",
              "      <td>16.3</td>\n",
              "      <td>2,615</td>\n",
              "      <td>38.7</td>\n",
              "      <td>2,388</td>\n",
              "      <td>35.4</td>\n",
              "      <td>492</td>\n",
              "      <td>7.3</td>\n",
              "      <td>152</td>\n",
              "      <td>2.3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-023a5f40-8632-4e82-abd3-9b607856673c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-023a5f40-8632-4e82-abd3-9b607856673c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-023a5f40-8632-4e82-abd3-9b607856673c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8f4b0eea-0f9f-4437-8b35-47dbea75372d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f4b0eea-0f9f-4437-8b35-47dbea75372d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8f4b0eea-0f9f-4437-8b35-47dbea75372d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "broomrat",
              "summary": "{\n  \"name\": \"broomrat\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 277,\n        \"samples\": [\n          \"1,853\",\n          \"661\",\n          \"2,441\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.197468144587594,\n        \"min\": 1.9,\n        \"max\": 65.2,\n        \"num_unique_values\": 223,\n        \"samples\": [\n          55.4,\n          27.8,\n          26.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 270,\n        \"samples\": [\n          \"2,067\",\n          \"1,981\",\n          \"2,730\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.7003937081631726,\n        \"min\": 23.9,\n        \"max\": 45.5,\n        \"num_unique_values\": 130,\n        \"samples\": [\n          29.4,\n          33.3,\n          34.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 279,\n        \"samples\": [\n          \"1,514\",\n          \"1,712\",\n          \"596\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat0p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.496343151999787,\n        \"min\": 7.9,\n        \"max\": 62.9,\n        \"num_unique_values\": 198,\n        \"samples\": [\n          34.0,\n          31.3,\n          34.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat-1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 163,\n        \"min\": 26,\n        \"max\": 890,\n        \"num_unique_values\": 199,\n        \"samples\": [\n          617,\n          255,\n          371\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat-1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7025833352473487,\n        \"min\": 0.5,\n        \"max\": 14.5,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          5.7,\n          2.3,\n          9.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat-2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57,\n        \"min\": 2,\n        \"max\": 306,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          26,\n          121,\n          166\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rat-2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.058784520582286,\n        \"min\": 0.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          0.0,\n          4.4,\n          1.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "car.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "OnSM_yl0U4-s",
        "outputId": "a0ae3a9d-e113-4468-dcfa-ead17bc1f352"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode   car0  car0p   car1  car1p   car2  car2p  \\\n",
              "0      Astley Bridge  E05000650  1,202   20.2  2,503   42.0  1,732   29.1   \n",
              "1           Bradshaw  E05000651    796   16.1  2,045   41.3  1,627   32.8   \n",
              "2         Breightmet  E05000652  1,802   30.0  2,518   41.9  1,357   22.6   \n",
              "3      Bromley Cross  E05000653    688   11.5  2,474   41.5  2,162   36.3   \n",
              "4  Crompton (Bolton)  E05000654  2,130   31.6  3,062   45.4  1,271   18.8   \n",
              "\n",
              "   car3  car3p  \n",
              "0   525    8.8  \n",
              "1   485    9.8  \n",
              "2   335    5.6  \n",
              "3   638   10.7  \n",
              "4   286    4.2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0cfcaea8-26e2-416c-b568-49fd5d035904\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>car0</th>\n",
              "      <th>car0p</th>\n",
              "      <th>car1</th>\n",
              "      <th>car1p</th>\n",
              "      <th>car2</th>\n",
              "      <th>car2p</th>\n",
              "      <th>car3</th>\n",
              "      <th>car3p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>1,202</td>\n",
              "      <td>20.2</td>\n",
              "      <td>2,503</td>\n",
              "      <td>42.0</td>\n",
              "      <td>1,732</td>\n",
              "      <td>29.1</td>\n",
              "      <td>525</td>\n",
              "      <td>8.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>796</td>\n",
              "      <td>16.1</td>\n",
              "      <td>2,045</td>\n",
              "      <td>41.3</td>\n",
              "      <td>1,627</td>\n",
              "      <td>32.8</td>\n",
              "      <td>485</td>\n",
              "      <td>9.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>1,802</td>\n",
              "      <td>30.0</td>\n",
              "      <td>2,518</td>\n",
              "      <td>41.9</td>\n",
              "      <td>1,357</td>\n",
              "      <td>22.6</td>\n",
              "      <td>335</td>\n",
              "      <td>5.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>688</td>\n",
              "      <td>11.5</td>\n",
              "      <td>2,474</td>\n",
              "      <td>41.5</td>\n",
              "      <td>2,162</td>\n",
              "      <td>36.3</td>\n",
              "      <td>638</td>\n",
              "      <td>10.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>2,130</td>\n",
              "      <td>31.6</td>\n",
              "      <td>3,062</td>\n",
              "      <td>45.4</td>\n",
              "      <td>1,271</td>\n",
              "      <td>18.8</td>\n",
              "      <td>286</td>\n",
              "      <td>4.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cfcaea8-26e2-416c-b568-49fd5d035904')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0cfcaea8-26e2-416c-b568-49fd5d035904 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0cfcaea8-26e2-416c-b568-49fd5d035904');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f24f4a6a-5d3c-4e5e-a9e6-065db4e4aa6f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f24f4a6a-5d3c-4e5e-a9e6-065db4e4aa6f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f24f4a6a-5d3c-4e5e-a9e6-065db4e4aa6f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "car",
              "summary": "{\n  \"name\": \"car\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 277,\n        \"samples\": [\n          \"1,357\",\n          \"1,211\",\n          \"815\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car0p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.855898774231996,\n        \"min\": 8.3,\n        \"max\": 68.1,\n        \"num_unique_values\": 211,\n        \"samples\": [\n          28.1,\n          22.9,\n          30.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 276,\n        \"samples\": [\n          \"2,186\",\n          \"2,124\",\n          \"613\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0902964958774475,\n        \"min\": 27.6,\n        \"max\": 50.2,\n        \"num_unique_values\": 109,\n        \"samples\": [\n          41.6,\n          44.6,\n          45.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 272,\n        \"samples\": [\n          \"1,174\",\n          \"1,552\",\n          \"644\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.184177741884966,\n        \"min\": 3.8,\n        \"max\": 41.3,\n        \"num_unique_values\": 200,\n        \"samples\": [\n          16.2,\n          14.4,\n          23.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 142,\n        \"min\": 30,\n        \"max\": 842,\n        \"num_unique_values\": 224,\n        \"samples\": [\n          690,\n          170,\n          275\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"car3p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.9000941757202003,\n        \"min\": 0.5,\n        \"max\": 16.2,\n        \"num_unique_values\": 106,\n        \"samples\": [\n          8.3,\n          8.7,\n          4.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "disable.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "0hW5Q43aU8PW",
        "outputId": "d60e3eb4-96b7-4d90-bffe-418ffbd5442e"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode  nodis  nodisp onedis  onedisp  twodis  \\\n",
              "0      Astley Bridge  E05000650  4,016    67.4  1,554     26.1     392   \n",
              "1           Bradshaw  E05000651  3,238    65.4  1,338     27.0     375   \n",
              "2         Breightmet  E05000652  3,502    58.3  1,939     32.3     571   \n",
              "3      Bromley Cross  E05000653  4,279    71.8  1,357     22.8     326   \n",
              "4  Crompton (Bolton)  E05000654  4,395    65.1  1,874     27.8     480   \n",
              "\n",
              "   twodisp  \n",
              "0      6.6  \n",
              "1      7.6  \n",
              "2      9.5  \n",
              "3      5.5  \n",
              "4      7.1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5d434bca-91e1-4446-bc35-05e73eb6c98c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>nodis</th>\n",
              "      <th>nodisp</th>\n",
              "      <th>onedis</th>\n",
              "      <th>onedisp</th>\n",
              "      <th>twodis</th>\n",
              "      <th>twodisp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>4,016</td>\n",
              "      <td>67.4</td>\n",
              "      <td>1,554</td>\n",
              "      <td>26.1</td>\n",
              "      <td>392</td>\n",
              "      <td>6.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>3,238</td>\n",
              "      <td>65.4</td>\n",
              "      <td>1,338</td>\n",
              "      <td>27.0</td>\n",
              "      <td>375</td>\n",
              "      <td>7.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>3,502</td>\n",
              "      <td>58.3</td>\n",
              "      <td>1,939</td>\n",
              "      <td>32.3</td>\n",
              "      <td>571</td>\n",
              "      <td>9.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>4,279</td>\n",
              "      <td>71.8</td>\n",
              "      <td>1,357</td>\n",
              "      <td>22.8</td>\n",
              "      <td>326</td>\n",
              "      <td>5.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>4,395</td>\n",
              "      <td>65.1</td>\n",
              "      <td>1,874</td>\n",
              "      <td>27.8</td>\n",
              "      <td>480</td>\n",
              "      <td>7.1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d434bca-91e1-4446-bc35-05e73eb6c98c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5d434bca-91e1-4446-bc35-05e73eb6c98c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5d434bca-91e1-4446-bc35-05e73eb6c98c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-97b71cb9-f731-4588-9a36-8c7b6579ff33\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97b71cb9-f731-4588-9a36-8c7b6579ff33')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-97b71cb9-f731-4588-9a36-8c7b6579ff33 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "disable",
              "summary": "{\n  \"name\": \"disable\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nodis\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 276,\n        \"samples\": [\n          \"3,598\",\n          \"2,845\",\n          \"2,925\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nodisp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.425972685950381,\n        \"min\": 51.2,\n        \"max\": 85.9,\n        \"num_unique_values\": 158,\n        \"samples\": [\n          71.9,\n          55.2,\n          71.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"onedis\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"1,404\",\n          \"1,524\",\n          \"1,323\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"onedisp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.810938392738911,\n        \"min\": 12.6,\n        \"max\": 38.0,\n        \"num_unique_values\": 131,\n        \"samples\": [\n          32.5,\n          24.8,\n          27.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"twodis\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140,\n        \"min\": 98,\n        \"max\": 980,\n        \"num_unique_values\": 221,\n        \"samples\": [\n          455,\n          379,\n          503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"twodisp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.842817463417417,\n        \"min\": 1.6,\n        \"max\": 12.8,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          10.3,\n          6.6,\n          10.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "heating.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "id": "swt5J653U-1C",
        "outputId": "beb8a73c-1756-402a-b82a-2988cdf4b57d"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode  heat0  heat0p  heat1  heat1p  heatnore2  \\\n",
              "0      Astley Bridge  E05000650     85     1.4     47     0.8        428   \n",
              "1           Bradshaw  E05000651     32     0.6     21     0.4        346   \n",
              "2         Breightmet  E05000652    108     1.8     68     1.1        532   \n",
              "3      Bromley Cross  E05000653     46     0.8     17     0.3        421   \n",
              "4  Crompton (Bolton)  E05000654    123     1.8    100     1.5        591   \n",
              "\n",
              "   heatnore2p  heatrenew2  heatrenew2p  \n",
              "0         7.2          15          0.3  \n",
              "1         7.0          17          0.3  \n",
              "2         8.8          11          0.2  \n",
              "3         7.1          15          0.3  \n",
              "4         8.8           8          0.1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-23d0c109-44ad-448f-babf-b601152b9859\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>heat0</th>\n",
              "      <th>heat0p</th>\n",
              "      <th>heat1</th>\n",
              "      <th>heat1p</th>\n",
              "      <th>heatnore2</th>\n",
              "      <th>heatnore2p</th>\n",
              "      <th>heatrenew2</th>\n",
              "      <th>heatrenew2p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>85</td>\n",
              "      <td>1.4</td>\n",
              "      <td>47</td>\n",
              "      <td>0.8</td>\n",
              "      <td>428</td>\n",
              "      <td>7.2</td>\n",
              "      <td>15</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>32</td>\n",
              "      <td>0.6</td>\n",
              "      <td>21</td>\n",
              "      <td>0.4</td>\n",
              "      <td>346</td>\n",
              "      <td>7.0</td>\n",
              "      <td>17</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>108</td>\n",
              "      <td>1.8</td>\n",
              "      <td>68</td>\n",
              "      <td>1.1</td>\n",
              "      <td>532</td>\n",
              "      <td>8.8</td>\n",
              "      <td>11</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>46</td>\n",
              "      <td>0.8</td>\n",
              "      <td>17</td>\n",
              "      <td>0.3</td>\n",
              "      <td>421</td>\n",
              "      <td>7.1</td>\n",
              "      <td>15</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>123</td>\n",
              "      <td>1.8</td>\n",
              "      <td>100</td>\n",
              "      <td>1.5</td>\n",
              "      <td>591</td>\n",
              "      <td>8.8</td>\n",
              "      <td>8</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23d0c109-44ad-448f-babf-b601152b9859')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-23d0c109-44ad-448f-babf-b601152b9859 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-23d0c109-44ad-448f-babf-b601152b9859');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e487a7e0-0469-44bf-b332-4853adf68604\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e487a7e0-0469-44bf-b332-4853adf68604')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e487a7e0-0469-44bf-b332-4853adf68604 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "heating",
              "summary": "{\n  \"name\": \"heating\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heat0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56,\n        \"min\": 18,\n        \"max\": 395,\n        \"num_unique_values\": 137,\n        \"samples\": [\n          58,\n          73,\n          77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heat0p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7258478055729293,\n        \"min\": 0.4,\n        \"max\": 6.3,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          4.6,\n          2.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heat1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 46,\n        \"min\": 4,\n        \"max\": 238,\n        \"num_unique_values\": 127,\n        \"samples\": [\n          16,\n          9,\n          75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heat1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6978782698537614,\n        \"min\": 0.1,\n        \"max\": 3.4,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.5,\n          2.2,\n          2.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heatnore2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 121,\n        \"min\": 108,\n        \"max\": 827,\n        \"num_unique_values\": 216,\n        \"samples\": [\n          275,\n          552,\n          543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heatnore2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3785349253314332,\n        \"min\": 1.7,\n        \"max\": 12.2,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          7.2,\n          9.6,\n          6.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heatrenew2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1,\n        \"max\": 76,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          28,\n          4,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heatrenew2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16229314939043588,\n        \"min\": 0.0,\n        \"max\": 1.1,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.0,\n          0.3,\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "housenum.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "b7_hxvfWVCSk",
        "outputId": "d67c2112-050a-470b-abcc-aa764b4782b5"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode totalhouseholds\n",
              "0      Astley Bridge  E05000650           5,962\n",
              "1           Bradshaw  E05000651           4,951\n",
              "2         Breightmet  E05000652           6,012\n",
              "3      Bromley Cross  E05000653           5,963\n",
              "4  Crompton (Bolton)  E05000654           6,749"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-327a86bd-d82a-42dc-ac19-975ad5bc3f35\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>totalhouseholds</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>5,962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>4,951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>6,012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>5,963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>6,749</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-327a86bd-d82a-42dc-ac19-975ad5bc3f35')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-327a86bd-d82a-42dc-ac19-975ad5bc3f35 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-327a86bd-d82a-42dc-ac19-975ad5bc3f35');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9eb0a377-e3df-437d-b2bd-ca90d513c8bd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9eb0a377-e3df-437d-b2bd-ca90d513c8bd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9eb0a377-e3df-437d-b2bd-ca90d513c8bd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "housenum",
              "summary": "{\n  \"name\": \"housenum\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totalhouseholds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 285,\n        \"samples\": [\n          \"5,395\",\n          \"4,184\",\n          \"5,305\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tenure.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "id": "AhAv2UPLVFNu",
        "outputId": "0443f731-8c23-4b91-9279-a58a068fa8bc"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode    own  ownp  shareo  shareop socrent  \\\n",
              "0      Astley Bridge  E05000650  4,259  71.4       9      0.2     814   \n",
              "1           Bradshaw  E05000651  3,896  78.7      14      0.3     663   \n",
              "2         Breightmet  E05000652  3,272  54.4       7      0.1   2,070   \n",
              "3      Bromley Cross  E05000653  4,914  82.4      26      0.4     261   \n",
              "4  Crompton (Bolton)  E05000654  3,265  48.4      17      0.3   1,683   \n",
              "\n",
              "   socrentp prirent  prirentp  rentfree  rentfreep  \n",
              "0      13.7     870      14.6         9        0.2  \n",
              "1      13.4     375       7.6         5        0.1  \n",
              "2      34.4     645      10.7        19        0.3  \n",
              "3       4.4     761      12.8         2        0.0  \n",
              "4      24.9   1,757      26.0        27        0.4  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92224050-998d-4d11-89f5-bacdff52cda7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>own</th>\n",
              "      <th>ownp</th>\n",
              "      <th>shareo</th>\n",
              "      <th>shareop</th>\n",
              "      <th>socrent</th>\n",
              "      <th>socrentp</th>\n",
              "      <th>prirent</th>\n",
              "      <th>prirentp</th>\n",
              "      <th>rentfree</th>\n",
              "      <th>rentfreep</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>4,259</td>\n",
              "      <td>71.4</td>\n",
              "      <td>9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>814</td>\n",
              "      <td>13.7</td>\n",
              "      <td>870</td>\n",
              "      <td>14.6</td>\n",
              "      <td>9</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>3,896</td>\n",
              "      <td>78.7</td>\n",
              "      <td>14</td>\n",
              "      <td>0.3</td>\n",
              "      <td>663</td>\n",
              "      <td>13.4</td>\n",
              "      <td>375</td>\n",
              "      <td>7.6</td>\n",
              "      <td>5</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>3,272</td>\n",
              "      <td>54.4</td>\n",
              "      <td>7</td>\n",
              "      <td>0.1</td>\n",
              "      <td>2,070</td>\n",
              "      <td>34.4</td>\n",
              "      <td>645</td>\n",
              "      <td>10.7</td>\n",
              "      <td>19</td>\n",
              "      <td>0.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>4,914</td>\n",
              "      <td>82.4</td>\n",
              "      <td>26</td>\n",
              "      <td>0.4</td>\n",
              "      <td>261</td>\n",
              "      <td>4.4</td>\n",
              "      <td>761</td>\n",
              "      <td>12.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>3,265</td>\n",
              "      <td>48.4</td>\n",
              "      <td>17</td>\n",
              "      <td>0.3</td>\n",
              "      <td>1,683</td>\n",
              "      <td>24.9</td>\n",
              "      <td>1,757</td>\n",
              "      <td>26.0</td>\n",
              "      <td>27</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92224050-998d-4d11-89f5-bacdff52cda7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-92224050-998d-4d11-89f5-bacdff52cda7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-92224050-998d-4d11-89f5-bacdff52cda7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cf1b7bf2-5803-4e6e-b107-1d998ae4806f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf1b7bf2-5803-4e6e-b107-1d998ae4806f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cf1b7bf2-5803-4e6e-b107-1d998ae4806f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tenure",
              "summary": "{\n  \"name\": \"tenure\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"own\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 290,\n        \"samples\": [\n          \"2,683\",\n          \"2,992\",\n          \"2,769\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ownp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.02987136639531,\n        \"min\": 14.5,\n        \"max\": 90.7,\n        \"num_unique_values\": 238,\n        \"samples\": [\n          50.0,\n          44.3,\n          77.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shareo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30,\n        \"min\": 2,\n        \"max\": 290,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          5,\n          9,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shareop\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4808366991026488,\n        \"min\": 0.0,\n        \"max\": 3.9,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          0.6,\n          1.9,\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"socrent\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 272,\n        \"samples\": [\n          \"1,144\",\n          \"966\",\n          \"675\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"socrentp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.182302209495836,\n        \"min\": 1.6,\n        \"max\": 55.8,\n        \"num_unique_values\": 202,\n        \"samples\": [\n          15.7,\n          26.5,\n          17.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prirent\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 273,\n        \"samples\": [\n          \"833\",\n          \"897\",\n          \"3,825\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prirentp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.061853219153502,\n        \"min\": 6.2,\n        \"max\": 78.4,\n        \"num_unique_values\": 183,\n        \"samples\": [\n          11.6,\n          11.3,\n          23.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rentfree\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 0,\n        \"max\": 56,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          30,\n          7,\n          37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rentfreep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15848897475457122,\n        \"min\": 0.0,\n        \"max\": 1.4,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.7,\n          0.1,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "wdis.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "id": "Dn9PQCgNVOCz",
        "outputId": "a120a74f-6e57-458b-f807-855827075de8"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode    tr2  tr2p   tr25  tr25p  tr510  tr510p  \\\n",
              "0      Astley Bridge  E05000650    659  10.1  1,006   15.5    915    14.1   \n",
              "1           Bradshaw  E05000651    289   6.0    859   17.8    679    14.1   \n",
              "2         Breightmet  E05000652    516   9.0  1,456   25.4    687    12.0   \n",
              "3      Bromley Cross  E05000653    442   6.6    867   12.9  1,042    15.5   \n",
              "4  Crompton (Bolton)  E05000654  1,213  17.1  1,163   16.4    900    12.7   \n",
              "\n",
              "  tr1020  tr1020p  tr2030  tr2030p  tr3040  tr3040p  tr4060  tr4060p  tr60  \\\n",
              "0    746     11.5     318      4.9      48      0.7      35      0.5    39   \n",
              "1    640     13.3     182      3.8      22      0.5      24      0.5    33   \n",
              "2    697     12.2     155      2.7      32      0.6      38      0.7    55   \n",
              "3    767     11.4     351      5.2      37      0.6      42      0.6    52   \n",
              "4    844     11.9     353      5.0      54      0.8      39      0.6    72   \n",
              "\n",
              "   tr60p  \n",
              "0    0.6  \n",
              "1    0.7  \n",
              "2    1.0  \n",
              "3    0.8  \n",
              "4    1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf11952d-5b29-4be1-b033-2dfe4953f8f6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>tr2</th>\n",
              "      <th>tr2p</th>\n",
              "      <th>tr25</th>\n",
              "      <th>tr25p</th>\n",
              "      <th>tr510</th>\n",
              "      <th>tr510p</th>\n",
              "      <th>tr1020</th>\n",
              "      <th>tr1020p</th>\n",
              "      <th>tr2030</th>\n",
              "      <th>tr2030p</th>\n",
              "      <th>tr3040</th>\n",
              "      <th>tr3040p</th>\n",
              "      <th>tr4060</th>\n",
              "      <th>tr4060p</th>\n",
              "      <th>tr60</th>\n",
              "      <th>tr60p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>659</td>\n",
              "      <td>10.1</td>\n",
              "      <td>1,006</td>\n",
              "      <td>15.5</td>\n",
              "      <td>915</td>\n",
              "      <td>14.1</td>\n",
              "      <td>746</td>\n",
              "      <td>11.5</td>\n",
              "      <td>318</td>\n",
              "      <td>4.9</td>\n",
              "      <td>48</td>\n",
              "      <td>0.7</td>\n",
              "      <td>35</td>\n",
              "      <td>0.5</td>\n",
              "      <td>39</td>\n",
              "      <td>0.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>289</td>\n",
              "      <td>6.0</td>\n",
              "      <td>859</td>\n",
              "      <td>17.8</td>\n",
              "      <td>679</td>\n",
              "      <td>14.1</td>\n",
              "      <td>640</td>\n",
              "      <td>13.3</td>\n",
              "      <td>182</td>\n",
              "      <td>3.8</td>\n",
              "      <td>22</td>\n",
              "      <td>0.5</td>\n",
              "      <td>24</td>\n",
              "      <td>0.5</td>\n",
              "      <td>33</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>516</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1,456</td>\n",
              "      <td>25.4</td>\n",
              "      <td>687</td>\n",
              "      <td>12.0</td>\n",
              "      <td>697</td>\n",
              "      <td>12.2</td>\n",
              "      <td>155</td>\n",
              "      <td>2.7</td>\n",
              "      <td>32</td>\n",
              "      <td>0.6</td>\n",
              "      <td>38</td>\n",
              "      <td>0.7</td>\n",
              "      <td>55</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>442</td>\n",
              "      <td>6.6</td>\n",
              "      <td>867</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1,042</td>\n",
              "      <td>15.5</td>\n",
              "      <td>767</td>\n",
              "      <td>11.4</td>\n",
              "      <td>351</td>\n",
              "      <td>5.2</td>\n",
              "      <td>37</td>\n",
              "      <td>0.6</td>\n",
              "      <td>42</td>\n",
              "      <td>0.6</td>\n",
              "      <td>52</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>1,213</td>\n",
              "      <td>17.1</td>\n",
              "      <td>1,163</td>\n",
              "      <td>16.4</td>\n",
              "      <td>900</td>\n",
              "      <td>12.7</td>\n",
              "      <td>844</td>\n",
              "      <td>11.9</td>\n",
              "      <td>353</td>\n",
              "      <td>5.0</td>\n",
              "      <td>54</td>\n",
              "      <td>0.8</td>\n",
              "      <td>39</td>\n",
              "      <td>0.6</td>\n",
              "      <td>72</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf11952d-5b29-4be1-b033-2dfe4953f8f6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cf11952d-5b29-4be1-b033-2dfe4953f8f6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cf11952d-5b29-4be1-b033-2dfe4953f8f6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6cca798a-82b8-4f26-a851-26b241c2176b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cca798a-82b8-4f26-a851-26b241c2176b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6cca798a-82b8-4f26-a851-26b241c2176b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "wdis",
              "summary": "{\n  \"name\": \"wdis\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 255,\n        \"samples\": [\n          \"305\",\n          \"1,292\",\n          \"1,410\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.7463391643176385,\n        \"min\": 3.7,\n        \"max\": 26.4,\n        \"num_unique_values\": 140,\n        \"samples\": [\n          17.5,\n          4.1,\n          15.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr25\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 263,\n        \"samples\": [\n          \"840\",\n          \"910\",\n          \"1,426\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr25p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.9216258068244665,\n        \"min\": 2.2,\n        \"max\": 31.4,\n        \"num_unique_values\": 147,\n        \"samples\": [\n          11.9,\n          23.7,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr510\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 260,\n        \"samples\": [\n          \"1,074\",\n          \"537\",\n          \"919\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr510p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.152511199063677,\n        \"min\": 3.9,\n        \"max\": 28.1,\n        \"num_unique_values\": 144,\n        \"samples\": [\n          6.4,\n          11.4,\n          19.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr1020\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 230,\n        \"samples\": [\n          \"379\",\n          \"650\",\n          \"663\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr1020p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.414881011310983,\n        \"min\": 4.3,\n        \"max\": 23.0,\n        \"num_unique_values\": 118,\n        \"samples\": [\n          7.5,\n          16.1,\n          11.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr2030\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 95,\n        \"min\": 33,\n        \"max\": 599,\n        \"num_unique_values\": 166,\n        \"samples\": [\n          192,\n          91,\n          117\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr2030p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6052688324352478,\n        \"min\": 0.6,\n        \"max\": 10.3,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          1.4,\n          2.8,\n          1.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr3040\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 13,\n        \"max\": 173,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          173,\n          48,\n          148\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr3040p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.45785999184878795,\n        \"min\": 0.2,\n        \"max\": 3.6,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          0.4,\n          1.7,\n          0.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr4060\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 1,\n        \"max\": 242,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          10,\n          35,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr4060p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3191348842528412,\n        \"min\": 0.1,\n        \"max\": 2.9,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.5,\n          0.7,\n          1.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr60\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 19,\n        \"max\": 325,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          25,\n          39,\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tr60p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37263862032744455,\n        \"min\": 0.5,\n        \"max\": 3.9,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.6,\n          2.3,\n          1.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "whours.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "id": "RnrUEJcKVQwE",
        "outputId": "aee4102d-bc13-48f7-a2a1-b4af2a8bed97"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode  ptime  ptimep par15  par15p par1630  \\\n",
              "0      Astley Bridge  E05000650  2,053    31.6   627     9.6   1,426   \n",
              "1           Bradshaw  E05000651  1,423    29.5   481    10.0     942   \n",
              "2         Breightmet  E05000652  1,792    31.3   496     8.7   1,296   \n",
              "3      Bromley Cross  E05000653  1,813    27.0   587     8.7   1,226   \n",
              "4  Crompton (Bolton)  E05000654  2,439    34.4   703     9.9   1,736   \n",
              "\n",
              "   par1630p  ftime  ftimep  f3148  f3148p  f49  f49p  \n",
              "0      21.9  4,452    68.4  3,891    59.8  561   8.6  \n",
              "1      19.5  3,402    70.5  2,967    61.5  435   9.0  \n",
              "2      22.6  3,934    68.7  3,540    61.8  394   6.9  \n",
              "3      18.3  4,898    73.0  4,178    62.3  720  10.7  \n",
              "4      24.5  4,641    65.6  4,236    59.8  405   5.7  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef1a1972-8a8d-4a01-82dc-c9f129c28ddd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>ptime</th>\n",
              "      <th>ptimep</th>\n",
              "      <th>par15</th>\n",
              "      <th>par15p</th>\n",
              "      <th>par1630</th>\n",
              "      <th>par1630p</th>\n",
              "      <th>ftime</th>\n",
              "      <th>ftimep</th>\n",
              "      <th>f3148</th>\n",
              "      <th>f3148p</th>\n",
              "      <th>f49</th>\n",
              "      <th>f49p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>2,053</td>\n",
              "      <td>31.6</td>\n",
              "      <td>627</td>\n",
              "      <td>9.6</td>\n",
              "      <td>1,426</td>\n",
              "      <td>21.9</td>\n",
              "      <td>4,452</td>\n",
              "      <td>68.4</td>\n",
              "      <td>3,891</td>\n",
              "      <td>59.8</td>\n",
              "      <td>561</td>\n",
              "      <td>8.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>1,423</td>\n",
              "      <td>29.5</td>\n",
              "      <td>481</td>\n",
              "      <td>10.0</td>\n",
              "      <td>942</td>\n",
              "      <td>19.5</td>\n",
              "      <td>3,402</td>\n",
              "      <td>70.5</td>\n",
              "      <td>2,967</td>\n",
              "      <td>61.5</td>\n",
              "      <td>435</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>1,792</td>\n",
              "      <td>31.3</td>\n",
              "      <td>496</td>\n",
              "      <td>8.7</td>\n",
              "      <td>1,296</td>\n",
              "      <td>22.6</td>\n",
              "      <td>3,934</td>\n",
              "      <td>68.7</td>\n",
              "      <td>3,540</td>\n",
              "      <td>61.8</td>\n",
              "      <td>394</td>\n",
              "      <td>6.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>1,813</td>\n",
              "      <td>27.0</td>\n",
              "      <td>587</td>\n",
              "      <td>8.7</td>\n",
              "      <td>1,226</td>\n",
              "      <td>18.3</td>\n",
              "      <td>4,898</td>\n",
              "      <td>73.0</td>\n",
              "      <td>4,178</td>\n",
              "      <td>62.3</td>\n",
              "      <td>720</td>\n",
              "      <td>10.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>2,439</td>\n",
              "      <td>34.4</td>\n",
              "      <td>703</td>\n",
              "      <td>9.9</td>\n",
              "      <td>1,736</td>\n",
              "      <td>24.5</td>\n",
              "      <td>4,641</td>\n",
              "      <td>65.6</td>\n",
              "      <td>4,236</td>\n",
              "      <td>59.8</td>\n",
              "      <td>405</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef1a1972-8a8d-4a01-82dc-c9f129c28ddd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ef1a1972-8a8d-4a01-82dc-c9f129c28ddd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ef1a1972-8a8d-4a01-82dc-c9f129c28ddd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6effa9fa-3cd1-4260-8721-521e214ac531\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6effa9fa-3cd1-4260-8721-521e214ac531')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6effa9fa-3cd1-4260-8721-521e214ac531 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "whours",
              "summary": "{\n  \"name\": \"whours\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ptime\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 274,\n        \"samples\": [\n          \"1,534\",\n          \"1,291\",\n          \"1,531\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ptimep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.913425015378314,\n        \"min\": 15.6,\n        \"max\": 48.9,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          37.0,\n          48.9,\n          26.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par15\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 224,\n        \"samples\": [\n          \"655\",\n          \"796\",\n          \"372\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par15p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.276168288690904,\n        \"min\": 6.3,\n        \"max\": 22.7,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          11.6,\n          6.9,\n          8.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par1630\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 248,\n        \"samples\": [\n          \"957\",\n          \"1,835\",\n          \"1,091\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"par1630p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.5319099361234847,\n        \"min\": 9.2,\n        \"max\": 36.4,\n        \"num_unique_values\": 110,\n        \"samples\": [\n          26.8,\n          18.7,\n          24.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ftime\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 283,\n        \"samples\": [\n          \"4,198\",\n          \"2,674\",\n          \"3,772\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ftimep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.913425015378314,\n        \"min\": 51.1,\n        \"max\": 84.4,\n        \"num_unique_values\": 132,\n        \"samples\": [\n          63.0,\n          51.1,\n          73.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3148\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          \"3,484\",\n          \"3,070\",\n          \"4,823\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f3148p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.243154733139258,\n        \"min\": 44.6,\n        \"max\": 74.4,\n        \"num_unique_values\": 129,\n        \"samples\": [\n          62.0,\n          61.6,\n          65.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f49\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 208,\n        \"samples\": [\n          \"257\",\n          \"256\",\n          \"578\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"f49p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9393574305958259,\n        \"min\": 3.7,\n        \"max\": 17.2,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          8.0,\n          8.6,\n          10.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "broomnum.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "yLjFs5aNapYP",
        "outputId": "96a76f58-d992-429f-9e92-9bc5db779046"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode broom1  broom1p broom2  broom2p broom3  \\\n",
              "0      Astley Bridge  E05000650    529      8.9  1,863     31.2  2,438   \n",
              "1           Bradshaw  E05000651    199      4.0  1,280     25.9  2,479   \n",
              "2         Breightmet  E05000652    651     10.8  1,877     31.2  3,003   \n",
              "3      Bromley Cross  E05000653    276      4.6  1,641     27.5  2,423   \n",
              "4  Crompton (Bolton)  E05000654    838     12.4  2,933     43.5  2,156   \n",
              "\n",
              "   broom3p broom4  broom4p  \n",
              "0     40.9  1,132     19.0  \n",
              "1     50.1    993     20.1  \n",
              "2     49.9    484      8.0  \n",
              "3     40.6  1,622     27.2  \n",
              "4     31.9    822     12.2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1148c70f-7fbb-4e78-8187-ad60a0af0d73\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>broom1</th>\n",
              "      <th>broom1p</th>\n",
              "      <th>broom2</th>\n",
              "      <th>broom2p</th>\n",
              "      <th>broom3</th>\n",
              "      <th>broom3p</th>\n",
              "      <th>broom4</th>\n",
              "      <th>broom4p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>529</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1,863</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2,438</td>\n",
              "      <td>40.9</td>\n",
              "      <td>1,132</td>\n",
              "      <td>19.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>199</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1,280</td>\n",
              "      <td>25.9</td>\n",
              "      <td>2,479</td>\n",
              "      <td>50.1</td>\n",
              "      <td>993</td>\n",
              "      <td>20.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>651</td>\n",
              "      <td>10.8</td>\n",
              "      <td>1,877</td>\n",
              "      <td>31.2</td>\n",
              "      <td>3,003</td>\n",
              "      <td>49.9</td>\n",
              "      <td>484</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>276</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1,641</td>\n",
              "      <td>27.5</td>\n",
              "      <td>2,423</td>\n",
              "      <td>40.6</td>\n",
              "      <td>1,622</td>\n",
              "      <td>27.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>838</td>\n",
              "      <td>12.4</td>\n",
              "      <td>2,933</td>\n",
              "      <td>43.5</td>\n",
              "      <td>2,156</td>\n",
              "      <td>31.9</td>\n",
              "      <td>822</td>\n",
              "      <td>12.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1148c70f-7fbb-4e78-8187-ad60a0af0d73')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1148c70f-7fbb-4e78-8187-ad60a0af0d73 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1148c70f-7fbb-4e78-8187-ad60a0af0d73');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9990e5ff-eab4-4fe9-80da-27c08ea8c24d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9990e5ff-eab4-4fe9-80da-27c08ea8c24d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9990e5ff-eab4-4fe9-80da-27c08ea8c24d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "broomnum",
              "summary": "{\n  \"name\": \"broomnum\",\n  \"rows\": 297,\n  \"fields\": [\n    {\n      \"column\": \"ward\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"Quays\",\n          \"Thatto Heath\",\n          \"Fazakerley\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wardcode\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 297,\n        \"samples\": [\n          \"E05013031\",\n          \"E05014135\",\n          \"E05000897\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 257,\n        \"samples\": [\n          \"2,046\",\n          \"528\",\n          \"619\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom1p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.280812408725843,\n        \"min\": 1.7,\n        \"max\": 41.7,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          3.0,\n          8.1,\n          14.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 280,\n        \"samples\": [\n          \"1,292\",\n          \"2,149\",\n          \"1,669\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom2p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.475417327671302,\n        \"min\": 5.8,\n        \"max\": 61.9,\n        \"num_unique_values\": 203,\n        \"samples\": [\n          33.2,\n          27.6,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 284,\n        \"samples\": [\n          \"1,813\",\n          \"1,192\",\n          \"1,503\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom3p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.866058707858699,\n        \"min\": 4.6,\n        \"max\": 81.8,\n        \"num_unique_values\": 219,\n        \"samples\": [\n          37.9,\n          38.4,\n          54.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 274,\n        \"samples\": [\n          \"604\",\n          \"952\",\n          \"650\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"broom4p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.005131624656887,\n        \"min\": 0.5,\n        \"max\": 51.3,\n        \"num_unique_values\": 187,\n        \"samples\": [\n          36.5,\n          0.5,\n          14.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "broomnum = broomnum.drop('ward', axis=1)\n",
        "broomrat = broomrat.drop('ward', axis=1)\n",
        "car = car.drop('ward', axis=1)\n",
        "disable = disable.drop('ward', axis=1)\n",
        "heating = heating.drop('ward', axis=1)\n",
        "tenure = tenure.drop('ward', axis=1)\n",
        "wdis = wdis.drop('ward', axis=1)\n",
        "whours = whours.drop('ward', axis=1)\n",
        "\n",
        "TS4060 = housenum.merge(broomnum, on='wardcode')\n",
        "TS4060 = TS4060.merge(broomrat, on='wardcode')\n",
        "TS4060 = TS4060.merge(car, on='wardcode')\n",
        "TS4060 = TS4060.merge(disable, on='wardcode')\n",
        "TS4060 = TS4060.merge(heating, on='wardcode')\n",
        "TS4060 = TS4060.merge(tenure, on='wardcode')\n",
        "TS4060 = TS4060.merge(wdis, on='wardcode')\n",
        "TS4060 = TS4060.merge(whours, on='wardcode')\n",
        "\n",
        "TS4060.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 308
        },
        "id": "sXSmdZBjZpUA",
        "outputId": "91e17e32-4378-4b0d-8137-0bcd110d44b4"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ward   wardcode totalhouseholds broom1  broom1p broom2  \\\n",
              "0      Astley Bridge  E05000650           5,962    529      8.9  1,863   \n",
              "1           Bradshaw  E05000651           4,951    199      4.0  1,280   \n",
              "2         Breightmet  E05000652           6,012    651     10.8  1,877   \n",
              "3      Bromley Cross  E05000653           5,963    276      4.6  1,641   \n",
              "4  Crompton (Bolton)  E05000654           6,749    838     12.4  2,933   \n",
              "\n",
              "   broom2p broom3  broom3p broom4  ...  par15 par15p  par1630 par1630p  ftime  \\\n",
              "0     31.2  2,438     40.9  1,132  ...    627    9.6    1,426     21.9  4,452   \n",
              "1     25.9  2,479     50.1    993  ...    481   10.0      942     19.5  3,402   \n",
              "2     31.2  3,003     49.9    484  ...    496    8.7    1,296     22.6  3,934   \n",
              "3     27.5  2,423     40.6  1,622  ...    587    8.7    1,226     18.3  4,898   \n",
              "4     43.5  2,156     31.9    822  ...    703    9.9    1,736     24.5  4,641   \n",
              "\n",
              "  ftimep  f3148  f3148p  f49  f49p  \n",
              "0   68.4  3,891    59.8  561   8.6  \n",
              "1   70.5  2,967    61.5  435   9.0  \n",
              "2   68.7  3,540    61.8  394   6.9  \n",
              "3   73.0  4,178    62.3  720  10.7  \n",
              "4   65.6  4,236    59.8  405   5.7  \n",
              "\n",
              "[5 rows x 81 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33fcf984-07e2-42ec-b021-7f6c86a5d414\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ward</th>\n",
              "      <th>wardcode</th>\n",
              "      <th>totalhouseholds</th>\n",
              "      <th>broom1</th>\n",
              "      <th>broom1p</th>\n",
              "      <th>broom2</th>\n",
              "      <th>broom2p</th>\n",
              "      <th>broom3</th>\n",
              "      <th>broom3p</th>\n",
              "      <th>broom4</th>\n",
              "      <th>...</th>\n",
              "      <th>par15</th>\n",
              "      <th>par15p</th>\n",
              "      <th>par1630</th>\n",
              "      <th>par1630p</th>\n",
              "      <th>ftime</th>\n",
              "      <th>ftimep</th>\n",
              "      <th>f3148</th>\n",
              "      <th>f3148p</th>\n",
              "      <th>f49</th>\n",
              "      <th>f49p</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Astley Bridge</td>\n",
              "      <td>E05000650</td>\n",
              "      <td>5,962</td>\n",
              "      <td>529</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1,863</td>\n",
              "      <td>31.2</td>\n",
              "      <td>2,438</td>\n",
              "      <td>40.9</td>\n",
              "      <td>1,132</td>\n",
              "      <td>...</td>\n",
              "      <td>627</td>\n",
              "      <td>9.6</td>\n",
              "      <td>1,426</td>\n",
              "      <td>21.9</td>\n",
              "      <td>4,452</td>\n",
              "      <td>68.4</td>\n",
              "      <td>3,891</td>\n",
              "      <td>59.8</td>\n",
              "      <td>561</td>\n",
              "      <td>8.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bradshaw</td>\n",
              "      <td>E05000651</td>\n",
              "      <td>4,951</td>\n",
              "      <td>199</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1,280</td>\n",
              "      <td>25.9</td>\n",
              "      <td>2,479</td>\n",
              "      <td>50.1</td>\n",
              "      <td>993</td>\n",
              "      <td>...</td>\n",
              "      <td>481</td>\n",
              "      <td>10.0</td>\n",
              "      <td>942</td>\n",
              "      <td>19.5</td>\n",
              "      <td>3,402</td>\n",
              "      <td>70.5</td>\n",
              "      <td>2,967</td>\n",
              "      <td>61.5</td>\n",
              "      <td>435</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Breightmet</td>\n",
              "      <td>E05000652</td>\n",
              "      <td>6,012</td>\n",
              "      <td>651</td>\n",
              "      <td>10.8</td>\n",
              "      <td>1,877</td>\n",
              "      <td>31.2</td>\n",
              "      <td>3,003</td>\n",
              "      <td>49.9</td>\n",
              "      <td>484</td>\n",
              "      <td>...</td>\n",
              "      <td>496</td>\n",
              "      <td>8.7</td>\n",
              "      <td>1,296</td>\n",
              "      <td>22.6</td>\n",
              "      <td>3,934</td>\n",
              "      <td>68.7</td>\n",
              "      <td>3,540</td>\n",
              "      <td>61.8</td>\n",
              "      <td>394</td>\n",
              "      <td>6.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bromley Cross</td>\n",
              "      <td>E05000653</td>\n",
              "      <td>5,963</td>\n",
              "      <td>276</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1,641</td>\n",
              "      <td>27.5</td>\n",
              "      <td>2,423</td>\n",
              "      <td>40.6</td>\n",
              "      <td>1,622</td>\n",
              "      <td>...</td>\n",
              "      <td>587</td>\n",
              "      <td>8.7</td>\n",
              "      <td>1,226</td>\n",
              "      <td>18.3</td>\n",
              "      <td>4,898</td>\n",
              "      <td>73.0</td>\n",
              "      <td>4,178</td>\n",
              "      <td>62.3</td>\n",
              "      <td>720</td>\n",
              "      <td>10.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Crompton (Bolton)</td>\n",
              "      <td>E05000654</td>\n",
              "      <td>6,749</td>\n",
              "      <td>838</td>\n",
              "      <td>12.4</td>\n",
              "      <td>2,933</td>\n",
              "      <td>43.5</td>\n",
              "      <td>2,156</td>\n",
              "      <td>31.9</td>\n",
              "      <td>822</td>\n",
              "      <td>...</td>\n",
              "      <td>703</td>\n",
              "      <td>9.9</td>\n",
              "      <td>1,736</td>\n",
              "      <td>24.5</td>\n",
              "      <td>4,641</td>\n",
              "      <td>65.6</td>\n",
              "      <td>4,236</td>\n",
              "      <td>59.8</td>\n",
              "      <td>405</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 81 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33fcf984-07e2-42ec-b021-7f6c86a5d414')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-33fcf984-07e2-42ec-b021-7f6c86a5d414 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-33fcf984-07e2-42ec-b021-7f6c86a5d414');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78e5369f-5844-4f3d-9e29-a1a798ebf650\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78e5369f-5844-4f3d-9e29-a1a798ebf650')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78e5369f-5844-4f3d-9e29-a1a798ebf650 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "TS4060"
            }
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(TS4060.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G35d-phfbkaA",
        "outputId": "1050c33c-4db0-428d-a4e4-a2d5253d1ecb"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['ward', 'wardcode', 'totalhouseholds', 'broom1', 'broom1p', 'broom2',\n",
            "       'broom2p', 'broom3', 'broom3p', 'broom4', 'broom4p', 'rat2', 'rat2p',\n",
            "       'rat1', 'rat1p', 'rat0', 'rat0p', 'rat-1', 'rat-1p', 'rat-2', 'rat-2p',\n",
            "       'car0', 'car0p', 'car1', 'car1p', 'car2', 'car2p', 'car3', 'car3p',\n",
            "       'nodis', 'nodisp', 'onedis', 'onedisp', 'twodis', 'twodisp', 'heat0',\n",
            "       'heat0p', 'heat1', 'heat1p', 'heatnore2', 'heatnore2p', 'heatrenew2',\n",
            "       'heatrenew2p', 'own', 'ownp', 'shareo', 'shareop', 'socrent',\n",
            "       'socrentp', 'prirent', 'prirentp', 'rentfree', 'rentfreep', 'tr2',\n",
            "       'tr2p', 'tr25', 'tr25p', 'tr510', 'tr510p', 'tr1020', 'tr1020p',\n",
            "       'tr2030', 'tr2030p', 'tr3040', 'tr3040p', 'tr4060', 'tr4060p', 'tr60',\n",
            "       'tr60p', 'ptime', 'ptimep', 'par15', 'par15p', 'par1630', 'par1630p',\n",
            "       'ftime', 'ftimep', 'f3148', 'f3148p', 'f49', 'f49p'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "TS4060.to_csv(\"TS4060.csv\")"
      ],
      "metadata": {
        "id": "Wozyds_8br3f"
      },
      "execution_count": 44,
      "outputs": []
    }
  ]
}